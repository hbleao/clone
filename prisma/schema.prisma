generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../src/database/dev.db"
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  password     String
  registration String   @unique
  role         String   @default("AUTHOR")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  apps         App[]

  @@map("users")
}

model App {
  id              String            @id @default(uuid())
  title           String
  name            String
  slug            String            @unique
  description     String?
  owner           String
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  userId          String
  user            User              @relation(fields: [userId], references: [id])
  Page            Page[]
  SectionTemplate SectionTemplate[]

  @@map("apps")
}

model Page {
  id          String    @id @default(uuid())
  title       String // Título da página
  slug        String // URL amigável
  content     String? // Array de seções baseadas nos templates (JSON string)
  status      String    @default("draft") // draft, published, archived
  type        String // tipo de página (landing, blog, form, etc)
  author      String // Nome do autor
  appId       String // Relação com o App
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  publishedAt DateTime? // Data de publicação
  app         App       @relation(fields: [appId], references: [id])
  seo         Seo? // Relação 1:1 com SEO

  @@unique([appId, slug]) // Garante que o slug seja único dentro do app
  @@index([status]) // Índice para consultas por status
  @@map("pages")
}

model Seo {
  id            String   @id @default(uuid())
  title         String // Título da página para SEO
  description   String? // Meta descrição
  keywords      String? // Palavras-chave
  ogTitle       String? // Open Graph título
  ogDescription String? // Open Graph descrição
  ogImage       String? // URL da imagem Open Graph
  canonical     String? // URL canônica
  robots        String? // Meta robots (index, follow, etc)
  pageId        String   @unique // Relação 1:1 com Page
  page          Page     @relation(fields: [pageId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("seos")
}

model SectionTemplate {
  id          String   @id @default(uuid())
  name        String
  type        String // hero, features, testimonials, etc
  description String
  thumbnail   String?
  schema      String // Schema dos campos do template (JSON string)
  defaultData String? // Dados padrão para o template (JSON string)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  appId       String // Relação com o App
  app         App      @relation(fields: [appId], references: [id])

  @@map("section_templates")
}
